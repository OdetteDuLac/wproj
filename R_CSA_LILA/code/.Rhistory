border.col = "gray40",
border.alpha = 0.5,
id = "NAME",
popup.vars = c("LILA POP(%)" = "PCT_LILA_POP")) +
tm_shape(csa.ny) +
tm_dots(col = "AccptdPmnt_SNAP",
size = 0.05,
title = "SNAP Accepting CSAs",
labels = c("No SNAP", "SNAP")) +
tm_view(view.legend.position = c("right", "top"))
# Arrange Maps
tmap_arrange(nc.csa.snap.map,
nm.csa.snap.map,
ny.csa.snap.map,
nrow = 3)
nc.csa.snap.map
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
#################
###### Histograms
#################
# histogram of population data by state
st.hist.lila <- ggplot(fenv.atlas.st.accs.mj,
aes(x = PCT_LILA_ST)) +
geom_histogram(bins = 17,
fill = "orange",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of States") +
ggtitle("Percent LILA Population Per State") +
theme_minimal()
# histogram of access data by county
nc.cty.hist.lila <- ggplot(nc.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NC") +
theme_minimal()
nm.cty.hist.lila <- ggplot(nm.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NM") +
theme_minimal()
ny.cty.hist.lila <- ggplot(ny.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NY") +
theme_minimal()
# Histogram layout
# PCT LILA Pop by State
st.hist.lila
# PCT LILA Pop by County in NC, NM, and NY
nc.cty.hist.lila
nm.cty.hist.lila
ny.cty.hist.lila
#################
###### Histograms
#################
# histogram of population data by state
st.hist.lila <- ggplot(fenv.atlas.st.accs.mj,
aes(x = PCT_LILA_ST)) +
geom_histogram(bins = 17,
fill = "orange",
col = "black",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of States") +
ggtitle("Percent LILA Population Per State") +
theme_minimal()
# histogram of access data by county
nc.cty.hist.lila <- ggplot(nc.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
col = "black",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NC") +
theme_minimal()
nm.cty.hist.lila <- ggplot(nm.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
col = "black",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NM") +
theme_minimal()
ny.cty.hist.lila <- ggplot(ny.cty.shp.mj,
aes(x = PCT_LILA_POP)) +
geom_histogram(bins = 15,
fill = "orange",
col = "black",
size = 0.25,
alpha = 0.5) +
labs(x = "Percent LILA Population",
y = "Number of Counties") +
ggtitle("Percent LILA Population Per County in NY") +
theme_minimal()
# Histogram layout
# PCT LILA Pop by State
st.hist.lila
# PCT LILA Pop by County in NC, NM, and NY
nc.cty.hist.lila
nm.cty.hist.lila
ny.cty.hist.lila
fenv.atlas.st.accs.mj$STATE[order(fenv.atlas.st.accs.mj$PCT_LILA_POP)[2]]
View(fenv.atlas.st.accs.mj)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
###########################
#### Descriptive Statistics
###########################
# Descriptive statistics table for Food Access data
state.accs.desc.stats.tb <- tibble(Measure = c("NA Observations (County)",
"Minimum",
"Maximum",
"Mean",
"Median",
"Standard Deviation"),
# NA data is from the nonagregated table, because the aggregated table
# removes NAs to sum by state; And I want to know how many NA values are in
# the initial data set
Low_Income_Low_Access =c(sum(is.na(fenv.atlas.cty.accs$LACCESS_LOWI15)),
# The rest of the descriptive statistics are from the
# table aggregated by state
min(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
max(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
mean(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
median(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
sd(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE)
)
)
# Descriptive statistics table for CSA Data
csa.dir.desc.stats.tb <- tibble(Measure = c("Total CSAs",
"NA Observations (SNAP)",
"CSAs in NC",
"CSAs in NM",
"CSAs in NY",
"SNAP Accepting CSAs"),
CSA = c(nrow(csa.dir.sp),
sum(is.na(csa.dir.sp$AccptdPmnt_SNAP)),
nrow(csa.nc),
nrow(csa.nm),
nrow(csa.ny),
nrow(csa.dir.sp.snap)
)
)
## Print nice version of the tables
lila.table <- kable(state.accs.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of Low Income Low Access Population in 2015 by State") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
csa.table <- kable(csa.dir.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of CSAs") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
lila.table | csa.table
knitr::opts_chunk$set(echo = TRUE)
# Download Libraries
library(tidyverse)
library(tmap)
library(tmaptools)
library(sf)
library(ggplot2)
library(readxl)
library(dplyr)
library(kableExtra)
library(httr)
library(rjson)
library(spdep)
library(spatstat)
library(patchwork)
###########################
#### Descriptive Statistics
###########################
# Descriptive statistics table for Food Access data
state.accs.desc.stats.tb <- tibble(Measure = c("NA Observations (County)",
"Minimum",
"Maximum",
"Mean",
"Median",
"Standard Deviation"),
# NA data is from the nonagregated table, because the aggregated table
# removes NAs to sum by state; And I want to know how many NA values are in
# the initial data set
Low_Income_Low_Access =c(sum(is.na(fenv.atlas.cty.accs$LACCESS_LOWI15)),
# The rest of the descriptive statistics are from the
# table aggregated by state
min(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
max(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
mean(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
median(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
sd(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE)
)
)
# Descriptive statistics table for CSA Data
csa.dir.desc.stats.tb <- tibble(Measure = c("Total CSAs",
"NA Observations (SNAP)",
"CSAs in NC",
"CSAs in NM",
"CSAs in NY",
"SNAP Accepting CSAs"),
CSA = c(nrow(csa.dir.sp),
sum(is.na(csa.dir.sp$AccptdPmnt_SNAP)),
nrow(csa.nc),
nrow(csa.nm),
nrow(csa.ny),
nrow(csa.dir.sp.snap)
)
)
## Print nice version of the tables
lila.table <- kable(state.accs.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of Low Income Low Access Population in 2015 by State") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
csa.table <- kable(csa.dir.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of CSAs") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
lila.table | csa.table
###########################
#### Descriptive Statistics
###########################
# Descriptive statistics table for Food Access data
state.accs.desc.stats.tb <- tibble(Measure = c("NA Observations (County)",
"Minimum",
"Maximum",
"Mean",
"Median",
"Standard Deviation"),
# NA data is from the nonagregated table, because the aggregated table
# removes NAs to sum by state; And I want to know how many NA values are in
# the initial data set
Low_Income_Low_Access =c(sum(is.na(fenv.atlas.cty.accs$LACCESS_LOWI15)),
# The rest of the descriptive statistics are from the
# table aggregated by state
min(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
max(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
mean(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
median(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
sd(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE)
)
)
# Descriptive statistics table for CSA Data
csa.dir.desc.stats.tb <- tibble(Measure = c("Total CSAs",
"NA Observations (SNAP)",
"CSAs in NC",
"CSAs in NM",
"CSAs in NY",
"SNAP Accepting CSAs"),
CSA = c(nrow(csa.dir.sp),
sum(is.na(csa.dir.sp$AccptdPmnt_SNAP)),
nrow(csa.nc),
nrow(csa.nm),
nrow(csa.ny),
nrow(csa.dir.sp.snap)
)
)
## Print nice version of the tables
lila.table <- kable(state.accs.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of Low Income Low Access Population in 2015 by State") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
csa.table <- kable(csa.dir.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of CSAs") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
lila.table + csa.table
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
# Download Libraries
library(tidyverse)
library(tmap)
library(tmaptools)
library(sf)
library(ggplot2)
library(readxl)
library(dplyr)
library(kableExtra)
library(httr)
library(rjson)
library(spdep)
library(spatstat)
library(gridExtra)
###########################
#### Descriptive Statistics
###########################
# Descriptive statistics table for Food Access data
state.accs.desc.stats.tb <- tibble(Measure = c("NA Observations (County)",
"Minimum",
"Maximum",
"Mean",
"Median",
"Standard Deviation"),
# NA data is from the nonagregated table, because the aggregated table
# removes NAs to sum by state; And I want to know how many NA values are in
# the initial data set
Low_Income_Low_Access =c(sum(is.na(fenv.atlas.cty.accs$LACCESS_LOWI15)),
# The rest of the descriptive statistics are from the
# table aggregated by state
min(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
max(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
mean(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
median(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE),
sd(fenv.atlas.cty.accs.sum$TLILA_POP, na.rm = TRUE)
)
)
# Descriptive statistics table for CSA Data
csa.dir.desc.stats.tb <- tibble(Measure = c("Total CSAs",
"NA Observations (SNAP)",
"CSAs in NC",
"CSAs in NM",
"CSAs in NY",
"SNAP Accepting CSAs"),
CSA = c(nrow(csa.dir.sp),
sum(is.na(csa.dir.sp$AccptdPmnt_SNAP)),
nrow(csa.nc),
nrow(csa.nm),
nrow(csa.ny),
nrow(csa.dir.sp.snap)
)
)
## Print nice version of the tables
lila.table <- kable(state.accs.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of Low Income Low Access Population in 2015 by State") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
csa.table <- kable(csa.dir.desc.stats.tb,
digits = 1,
format.args = list(big.mark = ",",
scientific = FALSE,
drop0trailing = TRUE),
caption = "Summary of CSAs") %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
grid.arrange(lila.table, csa.table)
knitr::opts_chunk$set(echo = TRUE)
# Download Libraries
library(tidyverse)
library(tmap)
library(tmaptools)
library(sf)
library(ggplot2)
library(readxl)
library(dplyr)
library(kableExtra)
library(httr)
library(rjson)
library(spdep)
library(spatstat)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
wordcountaddin:::text_stats() %>%
kable_styling(bootstrap_options = c("striped",
"hover",
"condensed",
"responsive"),
full_width = F)
length(which(csa.nc$AccptdPmnt_SNAP == "1")
length(which(csa.nc$AccptdPmnt_SNAP == "1")
length(which(csa.nc$AccptdPmnt_SNAP == "1"))
